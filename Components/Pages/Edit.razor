@page "/edit"
@rendermode InteractiveServer
@using WebKitchen.Components.Pages.EditForms;

<PageTitle>Edit</PageTitle>

<div class="dropdown mb-2">
    <a class="btn btn-primary custom-layout dropdown-toggle btn-lg" href="#" role="button" data-bs-toggle="dropdown"
       aria-expanded="false">
        Choose what to edit
    </a>

    <ul class="dropdown-menu">
        <li>
            <button class="dropdown-item" type="submit" onclick="@(() => HandleOptionChange("mealType"))">Recipe Meal
                Type
            </button>
        </li>
        <li>
            <button class="dropdown-item" type="submit" onclick="@(() => HandleOptionChange("name"))">Recipe Name
            </button>
        </li>
        <li>
            <button class="dropdown-item" type="submit" onclick="@(() => HandleOptionChange("ingredient"))">Recipe
                Ingredient
            </button>
        </li>
        <li>
            <button class="dropdown-item" type="submit" onclick="@(() => HandleOptionChange("image"))">Recipe Image
            </button>
        </li>
        <li>
            <button class="dropdown-item" type="submit" onclick="@(() => HandleOptionChange("delete-recipe"))">Delete
                Recipe
            </button>
        </li>
        <li>
            <hr class="dropdown-divider"/>
        </li>
        <li>
            <button class="dropdown-item" type="submit" onclick="@(() => HandleOptionChange("database-ingredient"))">
                Database Ingredient
            </button>
        </li>
        <li>
            <button class="dropdown-item" type="submit" onclick="@(() => HandleOptionChange("delete-ingredient"))">
                Delete
                Database Ingredient
            </button>
        </li>
        <li>
            <hr class="dropdown-divider"/>
        </li>
        <li>
            <button class="dropdown-item" type="submit" onclick="@(() => HandleOptionChange("instructions"))">
                Instructions
            </button>
        </li>
    </ul>
</div>

@if (selectedOption != "")
{
    <div class="card generel__border-layout">
        <div class="card-body edit__button-margin">
            @switch (selectedOption)
            {
                case "mealType":
                    <div class="edit-recipes-form">
                        <EditMealTypeForm/>
                    </div>
                    break;
                case "name":
                    <div class="edit-recipes-form">
                        <EditRecipeNameForm/>
                    </div>
                    break;
                case "ingredient":
                    <EditRecipeIngredientForm/>
                    break;
                case "image":
                    <div class="edit-recipes-form">
                        <EditRecipeImageForm/>
                    </div>
                    break;
                case "delete-recipe":
                    <div class="edit-recipes-form">
                        <DeleteRecipeForm/>
                    </div>
                    break;
                case "database-ingredient":
                    <div class="edit-recipes-form">
                        <EditDbIngredient/>
                    </div>
                    break;
                case "delete-ingredient":
                    <div class="edit-recipes-form">
                        <DeleteDbIngredientForm/>
                    </div>
                    break;
                case "instructions":
                    <div>
                        <EditInstructionsForm/>
                    </div>
                    break;
            }
        </div>

    </div>
}

@code {

    private string selectedOption = string.Empty;

    private void HandleOptionChange(string option)
    {
        selectedOption = option;
        StateHasChanged();
    }

}

