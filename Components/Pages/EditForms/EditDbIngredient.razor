@inject DBService DbService

<EditForm Model="@this">
    <label class="form-label fw-bold">Database Ingredient Id To Edit</label>
    <InputNumber id="name" @bind-Value="_ingredientId" class="form-control"/>
    <button type="submit" class="btn btn-primary" @onclick="GetDatabaseIngredient">Get Database Ingredient</button>
</EditForm>

@if (_currentIngredient != null)
{
    <EditForm Model="@_currentIngredient" OnSubmit="@UpdateDatabaseIngredient">
        <label class="form-label fw-bold">Ingredient Name</label>
        <InputText @bind-Value="_currentIngredient.Name" class="form-control"/>

        <label class="form-label fw-bold">Ingredient Calories</label>
        <InputNumber @bind-Value="_currentIngredient.CaloriesPer100g" class="form-control"/>

        <label class="form-label fw-bold">Ingredient Carbs</label>
        <InputNumber @bind-Value="_currentIngredient.CarbsPer100g" class="form-control"/>

        <label class="form-label fw-bold">Ingredient Protein</label>
        <InputNumber @bind-Value="_currentIngredient.ProteinPer100g" class="form-control"/>

        <label class="form-label fw-bold">Ingredient Fats</label>
        <InputNumber @bind-Value="_currentIngredient.FatPer100g" class="form-control"/>

        <label class="form-label fw-bold">Cost per 100g</label>
        <InputNumber disabled="true" @bind-Value="@_currentIngredient.CostPer100g" class="form-control"/>

        <div class="row pt-2">
            <div class="fw-bold">New Cost (leave at 0 for no change)</div>
            <div class="col-6">
                <label class="form-label fw-bold">Ingredient Total Cost</label>
                <InputNumber @bind-Value="_costPr100g" class="form-control"/>
            </div>
            <div class="col-6">
                <label class="form-label fw-bold">Ingredient Total Weight</label>
                <InputNumber @bind-Value="_weightPr100g" class="form-control"/>
            </div>
        </div>

        <label class="generel__file-label mt-2" for="fileInput">Choose Image</label>
        <InputFile id="fileInput" OnChange="ChooseImage" class="d-none"></InputFile>

        <button type="submit" class="btn btn-primary">Update Database ingredient</button>
    </EditForm>

    <div>
        <p>Database @_currentIngredient.Name Image</p>
        <img src="data:image/png;base64,@_currentIngredient.Base64Image" alt="Image" class="img-fluid"/>
    </div>
}

<StatusMessageToast @ref="_statusMessageToaster"/>

@code{

    int _ingredientId;
    float _weightPr100g;
    float _costPr100g;
    Ingredient? _currentIngredient;
    StatusMessageToast _statusMessageToaster = null!;

    private async Task UpdateDatabaseIngredient()
    {
        if (_currentIngredient == null)
        {
            Console.WriteLine("_currentIngredient is null.");
            return;
        }

        if (_weightPr100g != 0 && _costPr100g != 0)
            _currentIngredient.SetCostPer100G(_weightPr100g, _costPr100g);

        _currentIngredient.PrintIngredient();
        var result = await DbService.UpdateDbIngredient(_currentIngredient);
        await _statusMessageToaster.ShowToastAsync(result);
        _weightPr100g = 0;
        _costPr100g = 0;
    }

    private async Task GetDatabaseIngredient()
    {
        var result = await DbService.GetDbIngredientById(_ingredientId);
        if (result.Ingredient == null)
            await _statusMessageToaster.ShowToastAsync(result.Message);
        else
            _currentIngredient = result.Ingredient;
    }

    private async Task ChooseImage(InputFileChangeEventArgs imageFile)
    {
        foreach (var image in imageFile.GetMultipleFiles())
        {
            if (!image.ContentType.Contains("image"))
            {
                Console.WriteLine($"\"{image.ContentType}\" is not allowed");
                // Popup message saying so.
                return;
            }

            try
            {
                if (_currentIngredient != null)
                    await _currentIngredient.SetIngredientImage(image);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error setting image: " + ex.Message);
                Console.WriteLine(ex.StackTrace);
            }
        }
    }

}