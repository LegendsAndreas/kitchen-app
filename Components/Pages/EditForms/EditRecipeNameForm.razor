@using WebKitchen.Components.SharedComponents;
@inject DBService DbService;

<EditForm Model="@recipeId" OnSubmit="@HandleGettingId">
    <label class="form-label fw-bold">Recipe ID</label>
    <InputNumber id="recipe-name" @bind-Value="recipeId" class="form-control"/>
    <button type="submit" class="btn btn-primary">Get Recipe</button>
</EditForm>

@if (currentRecipe != null)
{
    <EditForm Model="@currentRecipe" OnSubmit="@HandleSubmit">
        <label class="form-label fw-bold">Updated Recipe Name</label>
        <InputText id="name" @bind-Value="currentRecipe.Name" class="form-control"/>
        <button type="submit" class="btn btn-primary">Update Recipe Name</button>
    </EditForm>

    <p>Preview</p>
    <PreviewRecipe CurrentPreviewRecipe="@currentRecipe"/>
}

<StatusMessageToast @ref="RecipeStatusToaster"></StatusMessageToast>

@* toaster *@
<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="liveToast" class="toast p-2 generel__border-layout" role="alert" aria-live="assertive" aria-atomic="true"
         data-bs-delay="5000">
        <div class="toast-body">
            @sqlStatusMessage
        </div>
    </div>
</div>

<script>
    function showRecipeToastStatus() {
        const toastLiveExample = document.getElementById('liveToast');
        const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample);
        toastBootstrap.show();
    }
</script>


@code{
    int recipeId;
    string sqlStatusMessage = "<SQL Status Message>";
    Recipe? currentRecipe;
    StatusMessageToast RecipeStatusToaster = null!;

    private async Task HandleGettingId()
    {
        Console.WriteLine("Handling getting recipe...");
        var result = await DbService.GetRecipeByIdAsync(recipeId);
        if (result.Recipe == null)
            await RecipeStatusToaster.ShowToastAsync(result.Message);
        else
            currentRecipe = result.Recipe;
    }

    private async Task HandleSubmit()
    {
        if (currentRecipe != null)
        {
            sqlStatusMessage = await DbService.UpdateRecipeNameByRecipeId(currentRecipe.Name, currentRecipe.RecipeId);

            await RecipeStatusToaster.ShowToastAsync(sqlStatusMessage);

            currentRecipe = null;
        }
    }

}