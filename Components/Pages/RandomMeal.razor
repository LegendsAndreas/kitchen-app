@page "/random-meal"
@rendermode InteractiveServer

@using WebKitchen.Services;
@inject DBService DbService;

<PageTitle>Random Meal</PageTitle>

<style>
    .random-meal-h {
        background-color: #313131;
        color: #48d7ff;
        border-radius: 5px;
        font-family: "Calibri Light", serif;
        border: 2px solid;
        width: fit-content; /* Automatically fits the block of its content to fit it. */
        margin: 0 auto;
    }
</style>

<h1 class="random-meal-h toast-header">
    <strong>
        <i>Cant decide? Let Fate decide it for you!</i>
    </strong>
</h1>

<div class="container">
    <div class="card" style="width: 50%; margin: 0 auto;">
        @if (randomRecipe.Name != string.Empty)
        {
            <img src="data:image/png;base64,@randomRecipe.Image" alt="Random Meal" class="card-img"/>
            <div class="card-header">
                <h3>@randomRecipe.Name</h3>
            </div>
            <div class="card-body border-primary">
                <p class="card-text">
                    - Calories: @randomRecipe.TotalMacros.Calories.ToString("0") <br>
                    - Carbs: @randomRecipe.TotalMacros.Carbs.ToString("0")<br>
                    - Fats: @randomRecipe.TotalMacros.Fat.ToString("0")<br>
                    - Protein: @randomRecipe.TotalMacros.Protein.ToString("0")
                </p>
            </div>
        }
        else
        {
            <button class="btn btn-danger" @onclick="RandomRecipe">Gamble</button>
        }
    </div>
</div>

@code {

    Recipe randomRecipe = new();

    private void RandomRecipe()
    {
        try
        {
            Console.WriteLine("Getting random recipe...");
            randomRecipe = DbService.GetRandomRecipe();
            randomRecipe.PrintRecipe();

        }
        catch (Exception e)
        {
            Console.WriteLine("Error at Random Recipe: "+e.Message);
            throw;
        }
        StateHasChanged();
    }
}