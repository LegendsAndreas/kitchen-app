@page "/random-meal"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using WebKitchen.Components.SharedComponents
@inject DBService DbService;
<PageTitle>Random Meal</PageTitle>

<h1 class="toast-header border-layout font-layout header-padding" id="random-meal-header">
    <strong>
        <i>Cant decide? Let Fate decide it for you!</i>
    </strong>
</h1>

<div class="container">
    <div class="card @cardBorderLayoutClass" style="width: 50%; margin: 10px auto 0;">
        @if (randomRecipe.Name != string.Empty)
        {
            <img src="data:image/png;base64,@randomRecipe.Base64Image" alt="Random Meal" class="card-img"/>
            <div class="card-header">
                <h3>@randomRecipe.Name</h3>
            </div>
            <div class="card-body border-primary">
                <p class="card-text">
                    - Calories: @randomRecipe.TotalMacros.Calories.ToString("0") <br>
                    - Carbs: @randomRecipe.TotalMacros.Carbs.ToString("0")<br>
                    - Fats: @randomRecipe.TotalMacros.Fat.ToString("0")<br>
                    - Protein: @randomRecipe.TotalMacros.Protein.ToString("0")
                </p>
            </div>
        }
        else
        {
            <button class="btn btn-danger" @onclick="RandomRecipe">Gamble</button>
        }
    </div>
</div>

<StatusMessageToast @ref="_statusMessageToaster"/>

@code {

    string cardBorderLayoutClass = "";
    Recipe randomRecipe = new();
    StatusMessageToast _statusMessageToaster = null!;

    private async Task RandomRecipe()
    {
        try
        {
            Console.WriteLine("Getting random recipe...");
            randomRecipe = await DbService.GetRandomRecipe();
            randomRecipe.PrintRecipe();
            cardBorderLayoutClass = "border-layout";
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error at Random Recipe: "+ex.Message);
            Console.WriteLine("StackTrace: "+ex.StackTrace);
            await _statusMessageToaster.ShowToastAsync("Error at \"RandomRecipe\": " + ex.Message);
            return;
        }
        StateHasChanged();
    }
}