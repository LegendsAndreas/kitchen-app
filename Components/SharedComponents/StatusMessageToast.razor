@inject IJSRuntime JsRuntime

@* toaster *@
<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="liveToast" class="toast p-2 generel__border-layout" role="alert" aria-live="assertive" aria-atomic="true"
         data-bs-delay="5000">
        <div class="toast-body">
            @_toastStatusMessage
        </div>
    </div>
</div>

<script>
    function showStatusToast() {
        const toastLiveExample = document.getElementById('liveToast');
        const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample);
        toastBootstrap.show();
    }
</script>

@code{

    private string _toastStatusMessage = "";

    public async Task ShowToastAsync(string message)
    {
        try
        {
            _toastStatusMessage = message;
            await JsRuntime.InvokeVoidAsync("showStatusToast");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error showing toast: " + ex.Message);
            Console.WriteLine("StackTrace: " + ex.StackTrace);
        }
    }

}