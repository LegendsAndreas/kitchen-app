@startuml
'Class Diagram
skinparam class{
    BackgroundColor LightGreen
}

class recipe <<(C,plum)>>{
    uint recipe_number
    char meal_type
    string recipe_name
    string image_str
    ingredient[] ingredients
    total_macros macros
}

class ingredient <<(C,plum)>>{
    string name
    float kg
    float calories
    float fats
    float carbohydrates
    float protein
    float multiplier
}

class macros <<(C,plum)>>{
    float total_calories
    float total_fats
    float total_carbs
    float total_protein
}

ingredient --|{ recipe::ingredients
macros --> recipe::macros
@enduml

@startuml
'DB Diagram
skinparam class{
    BackgroundColor LightGreen
}

skinparam object{
    BackgroundColor Cyan
}

skinparam json{
    BackgroundColor Orange
}

object Recipe {
    * id SERIAL PRIMARY KEY
    meal_type CHAR
    recipe_name TEXT
    image_path TEXT
    ingredients Ingredient[]
    macros recipe_macros
}

class Ingredient <<(C,plum)>>{
    name TEXT
    grams INT
    calories INT
    fats FLOAT
    carbohydrates FLOAT
    protein FLOAT
    multiplier FLOAT
}

class recipe_macros <<(C,plum)>>{
    total_calories FLOAT
    total_fats FLOAT
    total_carbs FLOAT
    total_protein FLOAT
}

Recipe::ingredient ||--|{ Ingredient
Recipe::macros --|| recipe_macros

object Details{
    recipe_id CONSTRAINT FOREIGN KEY INT
    instructions JSON
}

json Instructions{
    "1":"Start by...",
    "2":"Then, start with the...",
    "...":"...",
    "note1":"By the way...",
    "note2":"Remember to...",
    "...":"..."
}

Details::recipe_id -|| Recipe::id
Instructions -> Details::instructions

@enduml

@startuml

if (counter) equals (7) then
:Print the weekly macros;
else
:;

@enduml



@startuml
skinparameters
@enduml

'PlanMeals
@startuml
class DailyMeal{
    List<Recipes>
    TotalDailyMacros
}

class WeeklyMeals{
    List<DailyMeal> [7]
    TotalWeeklyMacros
}

DailyMeal --> WeeklyMeals
@enduml